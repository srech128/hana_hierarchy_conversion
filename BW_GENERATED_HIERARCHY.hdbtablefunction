FUNCTION "user"."schema::function_name" (IP_HIERARCHY_ID VARCHAR(32)) 
	RETURNS TABLE (
NODE_ID VARCHAR(32),
LEVEL1_KEY VARCHAR(32),
LEVEL1_TEXT VARCHAR(255),
LEVEL2_KEY VARCHAR(32),
LEVEL2_TEXT VARCHAR(255),
LEVEL3_KEY VARCHAR(32),
LEVEL3_TEXT VARCHAR(255),
LEVEL4_KEY VARCHAR(32),
LEVEL4_TEXT VARCHAR(255),
LEVEL5_KEY VARCHAR(32),
LEVEL5_TEXT VARCHAR(255),
LEVEL6_KEY VARCHAR(32),
LEVEL6_TEXT VARCHAR(255),
LEVEL7_KEY VARCHAR(32),
LEVEL7_TEXT VARCHAR(255),
LEVEL8_KEY VARCHAR(32),
LEVEL8_TEXT VARCHAR(255),
LEVEL9_KEY VARCHAR(32),
LEVEL9_TEXT VARCHAR(255)
	)
	LANGUAGE SQLSCRIPT
	SQL SECURITY INVOKER AS
BEGIN
/***************************** 
	Write your function logic
 *****************************/
lt_hier_level_table = SELECT
	 HIERARCHY_LEVEL,
	 PARENT_ID,
	 NODE_ID,
	 NODENAME
	FROM HIERARCHY (
		SOURCE (
			SELECT
				"_HIERARCHY_PARENT" as PARENT_ID,
				"0GL_ACCOUNT" as NODE_ID,
				"_HIERARCHY_TEXT" as NODENAME 
			FROM "_SYS_BIC"."system-local.bw.bw2hana.0/GL_ACCOUNT_HIERARCHY"(PLACEHOLDER."$$hieid$$" => :IP_HIERARCHY_ID)
			WHERE "0GL_ACCOUNT" != 'NOTASSIGNED'
			ORDER BY "_HIERARCHY_PARENT" ASC)
	)
	ORDER BY hierarchy_level, hierarchy_rank
;

 lt_out_table = SELECT COALESCE (H9.NODE_ID, H8.NODE_ID, H7.NODE_ID, H6.NODE_ID, H5.NODE_ID, H4.NODE_ID, H3.NODE_ID, H2.NODE_ID, H1.NODE_ID) as "NODE_ID",
 	H1.NODE_ID as "LEVEL1_KEY", 
 	H1.NODENAME as "LEVEL1_TEXT", 
 	H2.NODE_ID as "LEVEL2_KEY", 
 	H2.NODENAME as "LEVEL2_TEXT",
 	H3.NODE_ID as "LEVEL3_KEY", 
 	H3.NODENAME as "LEVEL3_TEXT", 
 	H4.NODE_ID as "LEVEL4_KEY", 
 	H4.NODENAME as "LEVEL4_TEXT",
 	H5.NODE_ID as "LEVEL5_KEY", 
 	H5.NODENAME as "LEVEL5_TEXT", 
 	H6.NODE_ID as "LEVEL6_KEY", 
 	H6.NODENAME as "LEVEL6_TEXT",
 	H7.NODE_ID as "LEVEL7_KEY", 
 	H7.NODENAME as "LEVEL7_TEXT", 
 	H8.NODE_ID as "LEVEL8_KEY", 
 	H8.NODENAME as "LEVEL8_TEXT",
 	H9.NODE_ID as "LEVEL9_KEY", 
 	H9.NODENAME as "LEVEL9_TEXT"
 	FROM :lt_hier_level_table as "H1" 
	Left Outer Join :lt_hier_level_table as "H2" ON H1.NODE_ID = H2.PARENT_ID
	Left Outer Join :lt_hier_level_table as "H3" ON H2.NODE_ID = H3.PARENT_ID
	Left Outer Join :lt_hier_level_table as "H4" ON H3.NODE_ID = H4.PARENT_ID
	Left Outer Join :lt_hier_level_table as "H5" ON H4.NODE_ID = H5.PARENT_ID
	Left Outer Join :lt_hier_level_table as "H6" ON H5.NODE_ID = H6.PARENT_ID
	Left Outer Join :lt_hier_level_table as "H7" ON H6.NODE_ID = H7.PARENT_ID
	Left Outer Join :lt_hier_level_table as "H8" ON H7.NODE_ID = H8.PARENT_ID
	Left Outer Join :lt_hier_level_table as "H9" ON H8.NODE_ID = H9.PARENT_ID
	WHERE H1.Hierarchy_Level = 1
;

return :lt_out_table;
 
END;
